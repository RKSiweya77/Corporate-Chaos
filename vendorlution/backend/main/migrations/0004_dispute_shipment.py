# Generated by Django 5.2.6 on 2025-10-16 13:18

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0003_order_delivery_method_order_protection_fee_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dispute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reason', models.CharField(choices=[('not_received', 'Item Not Received'), ('not_as_described', 'Not As Described'), ('damaged', 'Damaged'), ('wrong_item', 'Wrong Item'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('evidence_images', models.JSONField(blank=True, default=list)),
                ('evidence_notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('under_review', 'Under Review'), ('resolved_refund', 'Resolved - Refund'), ('resolved_release', 'Resolved - Release'), ('closed', 'Closed')], default='open', max_length=20)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('refund_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('opened_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes_opened', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='main.order')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disputes_resolved', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('method', models.CharField(choices=[('pargo', 'Pargo'), ('courier', 'Courier'), ('postnet', 'PostNet'), ('pickup', 'Pickup')], max_length=20)),
                ('tracking_number', models.CharField(blank=True, max_length=100)),
                ('carrier_name', models.CharField(blank=True, max_length=100)),
                ('pargo_code', models.CharField(blank=True, max_length=50)),
                ('pickup_point', models.CharField(blank=True, max_length=200)),
                ('proof_of_dropoff', models.ImageField(blank=True, null=True, upload_to='shipments/proof/')),
                ('proof_url', models.URLField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_transit', 'In Transit'), ('delivered', 'Delivered'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('shipped_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('expected_delivery', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipment', to='main.order')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
